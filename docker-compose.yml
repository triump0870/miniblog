version: '2'
services:
  miniblog-uwsgi:
    image: miniblog-uwsgi
    container_name: miniblog-uwsgi
    links:
      - miniblog-mysql
      - rabbit
      - redis
    depends_on:
      - miniblog-mysql
    expose:
      - 8000
    volumes:
      - .:/app/
    env_file:
      - ./miniblog/settings/local.env
    environment:
      - "DATABASE_PASSWORD=${DATABASE_PASSWORD}"
      - "DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}"

  miniblog-nginx:
    image: miniblog-nginx
    container_name: miniblog-nginx
    depends_on:
      - miniblog-uwsgi
      - miniblog-mysql
    links:
      - miniblog-uwsgi
    volumes:
      - ./static:/app/static
      - ./media:/app/media
    env_file:
      - ./miniblog/settings/local.env
    environment:
      - UWSGI_URI=miniblog-uwsgi:30000
      - "SERVER_NAME=${WEB_HOST}"
      - "VIRTUAL_HOST=${WEB_HOST}"

  miniblog-mysql:
    image: miniblog-mysql
    container_name: miniblog-mysql
    ports:
      - "3306:3306"
    volumes_from:
      - miniblog-mysql-data
    depends_on:
      - miniblog-mysql-data
    env_file:
      - ./miniblog/settings/local.env
    environment:
      - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}"

  miniblog-mysql-data:
    image: mysql:latest
    container_name: miniblog-mysql-data
    volumes:
      - mysql-data:/var/lib/mysql/data
    entrypoint: /bin/bash
    privileged: true

  miniblog-phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: miniblog-phpmyadmin
    links:
      - "miniblog-mysql:mysql"
    expose:
      - "80"
    environment:
      - "MYSQL_USERNAME=${MYSQL_USERNAME}"
      - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}"
      - "PMA_HOST=${PMA_HOST}"
      - "PMA_ABSOLUTE_URI=http://${DB_HOST}"
      - "VIRTUAL_HOST=${DB_HOST}"

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
    volumes_from:
      - miniblog-nginx
    links:
      - miniblog-nginx
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
      - ./templates/nginx:/etc/docker-gen/templates

  miniblog-nginx-www:
    image: miniblog-nginx
    container_name: miniblog-nginx2
    depends_on:
      - miniblog-uwsgi
    links:
      - miniblog-uwsgi
    volumes:
      - ./static:/app/static
      - ./media:/app/media
    environment:
      - UWSGI_URI=miniblog-uwsgi:30000
      - "SERVER_NAME=www.${WEB_HOST}"
      - "VIRTUAL_HOST=www.${WEB_HOST}"

  # Redis
  redis:
    image: redis:latest
    container_name: redis
    hostname: redis

  # RabbitMQ
  rabbit:
    hostname: rabbit
    image: rabbitmq:latest
    container_name: rabbit
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=rabbit@0870
    ports:
      - "5672:5672"  # we forward this port because it's useful for debugging
      - "15672:15672"  # here, we can access rabbitmq management plugin

  # Celery worker
  worker:
    container_name: celery
    image: miniblog:latest
    command: celery -E worker --app=miniblog.settings.celery_app:app -l info
    volumes:
      - .:/app
    links:
      - miniblog-mysql
      - rabbit
      - redis
    depends_on:
      - rabbit
      - miniblog-uwsgi
      - miniblog-mysql
      - redis
      - miniblog-nginx
      - miniblog-nginx-www

volumes:
  mysql-data:
    external: true

