version: '2'
services:
  web:
    image: miniblog
    container_name: web
    links:
      - mysql
      - rabbit
      - redis
    depends_on:
      - mysql
    expose:
      - 8000
    volumes:
      - .:/app/
    env_file:
      - ./miniblog/settings/local.env
    environment:
      - "DATABASE_PASSWORD=${DATABASE_PASSWORD}"
      - "DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}"
    command: "gunicorn miniblog.wsgi --access-logfile /var/log/app_logs/gunicorn-access.log --error-logfile /var/log/app_logs/gunicorn-error.log --log-level=DEBUG -k 'eventlet' -w 1 --reload -b 0.0.0.0:30000"

  mysql:
    image: mysql
    container_name: mysql
    ports:
      - "3306:3306"
    volumes_from:
      - mysql-data
    depends_on:
      - mysql-data
    env_file:
      - ./miniblog/settings/local.env
    environment:
      - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}"

  mysql-data:
    image: mysql:latest
    container_name: mysql-data
    volumes:
      - mysql-data:/var/lib/mysql/data
    entrypoint: /bin/bash
    privileged: true

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    links:
      - "mysql:mysql"
    expose:
      - "80"
    environment:
      - "MYSQL_USERNAME=${MYSQL_USERNAME}"
      - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}"
      - "PMA_HOST=${PMA_HOST}"
      - "PMA_ABSOLUTE_URI=http://${DB_HOST}"
      - "VIRTUAL_HOST=${DB_HOST}"

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
    volumes_from:
      - nginx
    links:
      - nginx
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
      - ./templates/nginx:/etc/docker-gen/templates

  nginx:
    image: nginx
    container_name: nginx
    depends_on:
      - web
      - mysql
    links:
      - web
    volumes:
      - ./static:/app/static
      - ./media:/app/media
    env_file:
      - ./miniblog/settings/local.env
    environment:
      - UWSGI_URI=web:30000
      - "SERVER_NAME=${WEB_HOST}"
      - "VIRTUAL_HOST=${WEB_HOST}"
  nginx-www:
    image: nginx
    container_name: nginx2
    depends_on:
      - web
    links:
      - web
    volumes:
      - ./static:/app/static
      - ./media:/app/media
    environment:
      - UWSGI_URI=web:30000
      - "SERVER_NAME=www.${WEB_HOST}"
      - "VIRTUAL_HOST=www.${WEB_HOST}"

  # Redis
  redis:
    image: redis:latest
    container_name: redis
    hostname: redis

  # RabbitMQ
  rabbit:
    hostname: rabbit
    image: rabbitmq:latest
    container_name: rabbit
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=rabbit@0870
    ports:
      - "5672:5672"  # we forward this port because it's useful for debugging
      - "15672:15672"  # here, we can access rabbitmq management plugin

  # Celery worker
  worker:
    container_name: celery
    image: miniblog:latest
    command: celery -E worker --app=miniblog.settings.celery_app:app -l info
    volumes:
      - .:/app
    links:
      - mysql
      - rabbit
      - redis
    depends_on:
      - rabbit
      - web
      - mysql
      - redis
      - nginx
      - nginx-www

volumes:
  mysql-data:
    external: true

